version: "3.8"

services:
  # Main distributor frontend (grabler.me)
  distributor:
    build:
      context: ./distributor
      dockerfile: Dockerfile
    container_name: distributor
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.distributor.rule=Host(`grabler.me`) || Host(`www.grabler.me`)"
      - "traefik.http.routers.distributor.entrypoints=websecure"
      - "traefik.http.routers.distributor.tls.certresolver=letsencrypt"
      - "traefik.http.services.distributor.loadbalancer.server.port=80"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.distributor-http.rule=Host(`grabler.me`) || Host(`www.grabler.me`)"
      - "traefik.http.routers.distributor-http.entrypoints=web"
      - "traefik.http.routers.distributor-http.middlewares=redirect-to-https"
    networks:
      - grabler-network

  # Felix frontend (felix.grabler.me)
  felix:
    build:
      context: ./Felix
      dockerfile: Dockerfile
    container_name: felix
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.felix.rule=Host(`felix.grabler.me`)"
      - "traefik.http.routers.felix.entrypoints=websecure"
      - "traefik.http.routers.felix.tls.certresolver=letsencrypt"
      - "traefik.http.services.felix.loadbalancer.server.port=80"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.felix-http.rule=Host(`felix.grabler.me`)"
      - "traefik.http.routers.felix-http.entrypoints=web"
      - "traefik.http.routers.felix-http.middlewares=redirect-to-https"
    networks:
      - grabler-network

  # MamaRezepte frontend (rezepte.grabler.me)
  mama-rezepte:
    build:
      context: ./MamaRezepte/frontend
      dockerfile: Dockerfile
    container_name: mama-rezepte
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mama-rezepte.rule=Host(`rezepte.grabler.me`)"
      - "traefik.http.routers.mama-rezepte.entrypoints=websecure"
      - "traefik.http.routers.mama-rezepte.tls.certresolver=letsencrypt"
      - "traefik.http.services.mama-rezepte.loadbalancer.server.port=80"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.mama-rezepte-http.rule=Host(`rezepte.grabler.me`)"
      - "traefik.http.routers.mama-rezepte-http.entrypoints=web"
      - "traefik.http.routers.mama-rezepte-http.middlewares=redirect-to-https"
    networks:
      - grabler-network

  # Namo Database
  namo-db:
    image: postgres:16-alpine
    container_name: namo-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: namo
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: namo
    volumes:
      - namo-db-data:/var/lib/postgresql/data
    secrets:
      - postgres_password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "namo", "-d", "namo"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - grabler-network

  # Namo Backend
  namo-backend:
    build:
      context: ./Namo/app/backend
      dockerfile: Dockerfile
    container_name: namo-backend
    depends_on:
      namo-db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./Namo/logs:/app/backend/logs
    environment:
      # Environment
      ENVIRONMENT: production

      # Database
      POSTGRES_USER: namo
      POSTGRES_DB: namo
      DATABASE_HOST: namo-db

      # FastAPI Configuration
      DEBUG: "false"
      RELOAD: "false"
      LOG_LEVEL: "info"

      # JWT Configuration
      ALGORITHM: "HS256"
      ACCESS_TOKEN_EXPIRE_MINUTES: "10080"

      # CORS Configuration
      CORS_ORIGINS: "*" # "https://namo.grabler.me"

      # Logging Configuration
      LOG_MAX_SIZE_MB: "10"
      LOG_BACKUP_COUNT: "3"
      LOG_CONSOLE: "false"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.namo-backend.rule=Host(`namo.grabler.me`) && PathPrefix(`/api`)"
      - "traefik.http.routers.namo-backend.entrypoints=websecure"
      - "traefik.http.routers.namo-backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.namo-backend.loadbalancer.server.port=8000"
      - "traefik.http.routers.namo-backend.middlewares=namo-api-strip"
      - "traefik.http.middlewares.namo-api-strip.stripprefix.prefixes=/api"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.namo-backend-http.rule=Host(`namo.grabler.me`) && PathPrefix(`/api`)"
      - "traefik.http.routers.namo-backend-http.entrypoints=web"
      - "traefik.http.routers.namo-backend-http.middlewares=redirect-to-https"
    secrets:
      - postgres_password
      - secret_key
      - telegram_bot_token
      - telegram_chat_id
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - grabler-network

  # Namo Frontend
  namo-frontend:
    build:
      context: ./Namo/app/frontend
      dockerfile: Dockerfile
    container_name: namo-frontend
    depends_on:
      namo-backend:
        condition: service_healthy
    restart: unless-stopped
    environment:
      VITE_API_URL: "https://namo.grabler.me/api"
      VITE_ENVIRONMENT: "production"
      VITE_APP_NAME: "Namo"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.namo-frontend.rule=Host(`namo.grabler.me`)"
      - "traefik.http.routers.namo-frontend.entrypoints=websecure"
      - "traefik.http.routers.namo-frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.namo-frontend.loadbalancer.server.port=80"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.namo-frontend-http.rule=Host(`namo.grabler.me`)"
      - "traefik.http.routers.namo-frontend-http.entrypoints=web"
      - "traefik.http.routers.namo-frontend-http.middlewares=redirect-to-https"
    networks:
      - grabler-network

  # Traefik reverse proxy with automatic HTTPS
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
      - "8081:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/acme:/acme
    labels:
      # Global redirect middleware
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
    networks:
      - grabler-network

networks:
  grabler-network:
    driver: bridge

volumes:
  namo-db-data:

secrets:
  postgres_password:
    file: ./Namo/secrets/prod_postgres_password.txt
  secret_key:
    file: ./Namo/secrets/prod_secret_key.txt
  telegram_bot_token:
    file: ./Namo/secrets/telegram_bot_token.txt
  telegram_chat_id:
    file: ./Namo/secrets/prod_telegram_chat_id.txt
