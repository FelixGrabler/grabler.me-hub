version: "3.8"

services:
  # Main distributor frontend (localhost:3000)
  distributor:
    build:
      context: ./distributor
      dockerfile: Dockerfile.dev
    container_name: distributor-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./distributor:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - grabler-network

  # Felix frontend (felix.localhost:8080)
  felix:
    build:
      context: ./Felix
      dockerfile: Dockerfile.dev
    container_name: felix-dev
    restart: unless-stopped
    ports:
      - "4173:4173"
    volumes:
      - ./Felix:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - grabler-network

  # MamaRezepte frontend (rezepte.localhost:8080)
  mama-rezepte:
    build:
      context: ./MamaRezepte/frontend
      dockerfile: Dockerfile.dev
    container_name: mama-rezepte-dev
    restart: unless-stopped
    ports:
      - "5174:5173"
    volumes:
      - ./MamaRezepte/frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - grabler-network

  # Namo Database
  namo-db:
    image: postgres:16-alpine
    container_name: namo-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: namo_dev
      POSTGRES_PASSWORD_FILE: /run/secrets/dev_postgres_password
      POSTGRES_DB: namo_dev
    volumes:
      - namo-db-data-dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    secrets:
      - dev_postgres_password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "namo_dev", "-d", "namo_dev"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - grabler-network

  # Namo Backend
  namo-backend:
    build:
      context: ./Namo/app/backend
      dockerfile: Dockerfile.dev
    container_name: namo-backend-dev
    depends_on:
      namo-db:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./Namo/logs:/app/backend/logs
      - ./Namo/app/backend:/app/backend
    environment:
      # Environment
      ENVIRONMENT: development

      # Database
      POSTGRES_USER: namo_dev
      POSTGRES_DB: namo_dev
      DATABASE_HOST: namo-db

      # FastAPI Configuration
      DEBUG: "true"
      RELOAD: "true"
      LOG_LEVEL: "debug"

      # JWT Configuration
      ALGORITHM: "HS256"
      ACCESS_TOKEN_EXPIRE_MINUTES: "10080"

      # CORS Configuration
      CORS_ORIGINS: "http://localhost:5173,http://127.0.0.1:5173,http://localhost:3000,http://namo.localhost:8080"

      # Logging Configuration
      LOG_MAX_SIZE_MB: "10"
      LOG_BACKUP_COUNT: "3"
      LOG_CONSOLE: "true"
    secrets:
      - dev_postgres_password
      - dev_secret_key
      - telegram_bot_token
      - dev_telegram_chat_id
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - grabler-network

  # Namo Frontend
  namo-frontend:
    build:
      context: ./Namo/app/frontend
      dockerfile: Dockerfile.dev
    container_name: namo-frontend-dev
    depends_on:
      namo-backend:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./Namo/app/frontend:/app/frontend
      - /app/frontend/node_modules
    environment:
      VITE_API_URL: "http://localhost:8000"
      VITE_ENVIRONMENT: "development"
      VITE_APP_NAME: "Namo Dev"
    networks:
      - grabler-network

  # Development proxy
  proxy:
    image: nginx:alpine
    container_name: grabler-proxy-dev
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./proxy/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - distributor
      - felix
      - mama-rezepte
      - namo-frontend
      - namo-backend
    networks:
      - grabler-network

networks:
  grabler-network:
    driver: bridge

volumes:
  namo-db-data-dev:

secrets:
  dev_postgres_password:
    file: ./Namo/secrets/dev_postgres_password.txt
  dev_secret_key:
    file: ./Namo/secrets/dev_secret_key.txt
  telegram_bot_token:
    file: ./Namo/secrets/telegram_bot_token.txt
  dev_telegram_chat_id:
    file: ./Namo/secrets/dev_telegram_chat_id.txt
